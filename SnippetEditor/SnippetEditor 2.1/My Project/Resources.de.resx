<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Attribute_Expected" xml:space="preserve">
    <value>Attribut {0} wird für den Knoten erwartet</value>
  </data>
  <data name="Cannot_Find_CodeSnippet" xml:space="preserve">
    <value>Snippet-Datei konnte nicht gefunden werden</value>
  </data>
  <data name="Cannot_Find_CodeSnippets" xml:space="preserve">
    <value>Snippet-Sammlung konnte nicht in der Datei gefunden werden</value>
  </data>
  <data name="Compile_Error" xml:space="preserve">
    <value>Fehler#</value>
  </data>
  <data name="Compile_Errors" xml:space="preserve">
    <value>{0} Fehler bei der Kompilierung</value>
  </data>
  <data name="Compile_Line" xml:space="preserve">
    <value> in Zeile</value>
  </data>
  <data name="Compiled_Code" xml:space="preserve">
    <value>Kompilierter code:</value>
  </data>
  <data name="Element_Expected" xml:space="preserve">
    <value>Element '{0}' wird für den Knoten erwartet:</value>
  </data>
  <data name="Error_Loading_Code_Snippet" xml:space="preserve">
    <value>Fehler beim Laden des Snippets…</value>
  </data>
  <data name="Error_Loading_Xml_File" xml:space="preserve">
    <value>Fehler beim Laden der XML-Datei…</value>
  </data>
  <data name="Error_Opening_File" xml:space="preserve">
    <value>Die folgende Datei konnte nicht gelesen werden…</value>
  </data>
  <data name="Error_Opening_File_Tile" xml:space="preserve">
    <value>Datei konnte nicht geöffnet werden…</value>
  </data>
  <data name="Error_Saving_To_File" xml:space="preserve">
    <value>Fehler beim Speichern der Datei…</value>
  </data>
  <data name="Error_Saving_To_File_Message" xml:space="preserve">
    <value>Stellen Sie sicher, dass die Datei nicht schreibgeschützt ist und dass Sie die erforderlichen Rechte für den Zugriff besitzen.</value>
  </data>
  <data name="Export_SaveTypeFilter" xml:space="preserve">
    <value>Visual Studio Community Content Installer-Datei (*.vsi)|*.vsi</value>
  </data>
  <data name="Export_Snippet_Cancelled" xml:space="preserve">
    <value>Exportieren wurde abgebrochen</value>
  </data>
  <data name="Export_Snippet_Error" xml:space="preserve">
    <value>Snippet konnte nicht nach .VSI exportiert werden</value>
  </data>
  <data name="Export_Snippet_Success" xml:space="preserve">
    <value>Snippet erfolgreich nach .VSI exportiert</value>
  </data>
  <data name="Export_Title" xml:space="preserve">
    <value>Snippet nach VSI exportieren</value>
  </data>
  <data name="Folder_Browser_Description" xml:space="preserve">
    <value>Wählen Sie den zu öffnenden Ordner…</value>
  </data>
  <data name="Help_Text" xml:space="preserve">
    <value>Bitte sehen Sie in der Dokumentation auf gotdotnet nach</value>
  </data>
  <data name="Item_Missing_Choice_Explanation" xml:space="preserve">
    <value>Wählen Sie "OK", um das Laden fortzusetzen, oder "Abbrechen", um abzubrechen.</value>
  </data>
  <data name="Language_Not_Supported" xml:space="preserve">
    <value>Speiche wird nicht unterstützt.</value>
  </data>
  <data name="Mnu_Delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="Mnu_Remove" xml:space="preserve">
    <value>Entfernen</value>
  </data>
  <data name="Msg_Add_Existing_Folder_Prompt" xml:space="preserve">
    <value>Wählen Sie einen Ordner aus, der zur Snippet-Sammlung hinzugefügt werden soll</value>
  </data>
  <data name="Msg_Add_New_Folder_Default" xml:space="preserve">
    <value>MyFolder</value>
  </data>
  <data name="Msg_Add_New_Folder_Prompt" xml:space="preserve">
    <value>Neuen Ordner hinzufügen</value>
  </data>
  <data name="Msg_Add_New_Folder_Title" xml:space="preserve">
    <value>Geben Sie den Namen des neuen Ordners ein</value>
  </data>
  <data name="Msg_Add_New_Snippet_Default" xml:space="preserve">
    <value>Neues Snippet…</value>
  </data>
  <data name="Msg_Add_New_Snippet_Prompt" xml:space="preserve">
    <value>Geben Sie den Namen des neuen Snippets ein</value>
  </data>
  <data name="Msg_Add_New_Snippet_Title" xml:space="preserve">
    <value>Neues Snippet hinzufügen</value>
  </data>
  <data name="Msg_Delete_File_Prompt" xml:space="preserve">
    <value>Achtung: Damit wird das Snippet endgültig aus dem Dateisystem gelöscht. Sind Sie sicher, dass sie dieses Snippet löschen möchten?</value>
  </data>
  <data name="Msg_Delete_File_Title" xml:space="preserve">
    <value>Snippet löschen</value>
  </data>
  <data name="Msg_Delete_Folder_Prompt" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie den Ordner löschen wollen?</value>
  </data>
  <data name="Msg_Delete_Folder_Title" xml:space="preserve">
    <value>Ordner löschen</value>
  </data>
  <data name="Msg_Remove_Folder_Prompt" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie den Ordner aus der Snippetsammlung entfernen wollen?</value>
  </data>
  <data name="Msg_Remove_Folder_Title" xml:space="preserve">
    <value>Ordner entfernen</value>
  </data>
  <data name="MyDocs_Snippets_Path" xml:space="preserve">
    <value>\Visual Studio\8.0\Code Snippets\VB\Eigene Code Snippets\</value>
  </data>
  <data name="NewLiteral" xml:space="preserve">
    <value>NewLiteral</value>
  </data>
  <data name="NewObject" xml:space="preserve">
    <value>NewObject</value>
  </data>
  <data name="Open_Snippet" xml:space="preserve">
    <value>Snippet öffnen…</value>
  </data>
  <data name="OpenSaveTypeFilter" xml:space="preserve">
    <value>Visual Studio Snippets (*.snippet)|*.snippet|Alle Dateien (*.*)|*.*</value>
  </data>
  <data name="Save_Snippet_As" xml:space="preserve">
    <value>Snippet speichern unter…</value>
  </data>
  <data name="Save_Snippet_Cancelled" xml:space="preserve">
    <value>Speichern wurde abgebrochen</value>
  </data>
  <data name="Save_Snippet_Error" xml:space="preserve">
    <value>Snippet konnte nicht gespeichert werden</value>
  </data>
  <data name="Save_Snippet_Success" xml:space="preserve">
    <value>Snippet wurde erfolgreich gespeichert</value>
  </data>
  <data name="Snippet_Closing1" xml:space="preserve">
    <value>Das geöffenete Snippet wird geschlossen.</value>
  </data>
  <data name="Snippet_Closing2" xml:space="preserve">
    <value>Möchten Sie die Änderungen speichern?</value>
  </data>
  <data name="Snippet_Editor" xml:space="preserve">
    <value>Snippet Editor</value>
  </data>
  <data name="Snippet_Extension" xml:space="preserve">
    <value>snippet</value>
  </data>
  <data name="Untitled" xml:space="preserve">
    <value>Unbenannt</value>
  </data>
  <data name="Welcome_HTML" xml:space="preserve">
    <value>&lt;html&gt;

&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="de"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;VB Snippet Editor Tips&lt;/title&gt;
&lt;style type="text/css"&gt;p{font-family: Verdana;font-size: 9pt;text-align: justify;}&lt;/style&gt;
&lt;/head&gt;

&lt;body&gt;



&lt;h3&gt;Hinweise für den schnellen Einstieg:&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Doppelklicken Sie ein Snippet in der Baumansicht, um es 
zu &lt;b&gt;bearbeiten&lt;/b&gt;.&lt;br&gt;
&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Um ein &lt;b&gt;neues&lt;/b&gt; Snippet zu erstellen, wählen Sie 
den Ordner aus, dem es hinzugefügt werden soll, klicken Sie den Ordner mit der 
rechten Maustaste an und wählen Sie &lt;i&gt;Neues Snippet hinzufügen&lt;/i&gt; aus dem 
Kontextmenü.&lt;br&gt;
&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Die &lt;b&gt;Suche&lt;/b&gt; nach Snippets kann über Filter 
vereinfacht werden. Der Filter ist kumulativ, d.h., es kann ein neuer 
Suchbegriff eingegeben werden, nach dem die bisherigen Suchergebnisse gefiltert 
werden. Um die Baumansicht zurückzusetzen, sodass alle Einträge angezeigt 
werden, löschen Sie einfach den Filterausdruck und klicken auf die Schaltfläche
&lt;i&gt;Übernehmen&lt;/i&gt; (oder drücken die Eingabetaste).&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;


&lt;/body&gt;
&lt;/html&gt;</value>
  </data>
</root>